/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Burnable__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IUniswapV2Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Factory__factory>;
    getContractFactory(
      name: "IUniswapV2Pair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Pair__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IUniswapV2Router01",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Router01__factory>;
    getContractFactory(
      name: "IUniswapV2Router02",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Router02__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "UniswapV2Router02",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV2Router02__factory>;
    getContractFactory(
      name: "IUniswapV3SwapCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3SwapCallback__factory>;
    getContractFactory(
      name: "IQuoter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IQuoter__factory>;
    getContractFactory(
      name: "ISwapRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISwapRouter__factory>;
    getContractFactory(
      name: "ImmutableCreate2Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ImmutableCreate2Factory__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ConnectorErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ConnectorErrors__factory>;
    getContractFactory(
      name: "VersaErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VersaErrors__factory>;
    getContractFactory(
      name: "VersaInteractorErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VersaInteractorErrors__factory>;
    getContractFactory(
      name: "VersaConnector",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VersaConnector__factory>;
    getContractFactory(
      name: "VersaReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VersaReceiver__factory>;
    getContractFactory(
      name: "VersaTokenConsumer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VersaTokenConsumer__factory>;
    getContractFactory(
      name: "VersaNonEthInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VersaNonEthInterface__factory>;
    getContractFactory(
      name: "Ownable2Step",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable2Step__factory>;
    getContractFactory(
      name: "INonfungiblePositionManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INonfungiblePositionManager__factory>;
    getContractFactory(
      name: "IPoolInitializer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPoolInitializer__factory>;
    getContractFactory(
      name: "VersaInteractorMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VersaInteractorMock__factory>;
    getContractFactory(
      name: "VersaReceiverMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VersaReceiverMock__factory>;
    getContractFactory(
      name: "VersaEth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VersaEth__factory>;
    getContractFactory(
      name: "VersaNonEth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VersaNonEth__factory>;
    getContractFactory(
      name: "VersaConnectorBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VersaConnectorBase__factory>;
    getContractFactory(
      name: "VersaConnectorEth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VersaConnectorEth__factory>;
    getContractFactory(
      name: "VersaConnectorNonEth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VersaConnectorNonEth__factory>;
    getContractFactory(
      name: "VersaInteractor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VersaInteractor__factory>;
    getContractFactory(
      name: "VersaTokenConsumerUniV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VersaTokenConsumerUniV2__factory>;
    getContractFactory(
      name: "VersaTokenConsumerUniV2Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VersaTokenConsumerUniV2Errors__factory>;
    getContractFactory(
      name: "WETH9",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WETH9__factory>;
    getContractFactory(
      name: "VersaTokenConsumerUniV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VersaTokenConsumerUniV3__factory>;
    getContractFactory(
      name: "VersaTokenConsumerUniV3Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VersaTokenConsumerUniV3Errors__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Burnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Burnable>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IUniswapV2Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Factory>;
    getContractAt(
      name: "IUniswapV2Pair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Pair>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IUniswapV2Router01",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Router01>;
    getContractAt(
      name: "IUniswapV2Router02",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Router02>;
    getContractAt(
      name: "IWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "UniswapV2Router02",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UniswapV2Router02>;
    getContractAt(
      name: "IUniswapV3SwapCallback",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3SwapCallback>;
    getContractAt(
      name: "IQuoter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IQuoter>;
    getContractAt(
      name: "ISwapRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISwapRouter>;
    getContractAt(
      name: "ImmutableCreate2Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ImmutableCreate2Factory>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ConnectorErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ConnectorErrors>;
    getContractAt(
      name: "VersaErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VersaErrors>;
    getContractAt(
      name: "VersaInteractorErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VersaInteractorErrors>;
    getContractAt(
      name: "VersaConnector",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VersaConnector>;
    getContractAt(
      name: "VersaReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VersaReceiver>;
    getContractAt(
      name: "VersaTokenConsumer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VersaTokenConsumer>;
    getContractAt(
      name: "VersaNonEthInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VersaNonEthInterface>;
    getContractAt(
      name: "Ownable2Step",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable2Step>;
    getContractAt(
      name: "INonfungiblePositionManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INonfungiblePositionManager>;
    getContractAt(
      name: "IPoolInitializer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPoolInitializer>;
    getContractAt(
      name: "VersaInteractorMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VersaInteractorMock>;
    getContractAt(
      name: "VersaReceiverMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VersaReceiverMock>;
    getContractAt(
      name: "VersaEth",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VersaEth>;
    getContractAt(
      name: "VersaNonEth",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VersaNonEth>;
    getContractAt(
      name: "VersaConnectorBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VersaConnectorBase>;
    getContractAt(
      name: "VersaConnectorEth",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VersaConnectorEth>;
    getContractAt(
      name: "VersaConnectorNonEth",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VersaConnectorNonEth>;
    getContractAt(
      name: "VersaInteractor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VersaInteractor>;
    getContractAt(
      name: "VersaTokenConsumerUniV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VersaTokenConsumerUniV2>;
    getContractAt(
      name: "VersaTokenConsumerUniV2Errors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VersaTokenConsumerUniV2Errors>;
    getContractAt(
      name: "WETH9",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WETH9>;
    getContractAt(
      name: "VersaTokenConsumerUniV3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VersaTokenConsumerUniV3>;
    getContractAt(
      name: "VersaTokenConsumerUniV3Errors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VersaTokenConsumerUniV3Errors>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
